######################################################################################
# JME CI/CD
######################################################################################
# Quick overview of what is going on in this script:
#   - Build natives for android
#   - Merge the natives, build the engine, create the zip release, maven artifacts, javadoc and native snapshot
#   - (only when native code changes) Deploy the natives snapshot to the MinIO instance
#   - (only when building a release) Deploy everything else to github releases and Sonatype
#   - (only when building a release) Update javadoc.jmonkeyengine.org
# Note:
#   All the actions/upload-artifact and actions/download-artifact steps are used to pass
#   stuff between jobs, github actions has some sort of storage that is local to the
#   running workflow, we use it to store the result of each job since the filesystem
#   is not maintained between jobs.
################# CONFIGURATIONS #####################################################
# >> Configure MINIO NATIVES SNAPSHOT
#     OBJECTS_KEY=XXXXXX
# >> Configure SONATYPE RELEASE
#     OSSRH_PASSWORD=XXXXXX
#     OSSRH_USERNAME=XXXXXX
# >> Configure SIGNING
#     SIGNING_KEY=XXXXXX
#     SIGNING_PASSWORD=XXXXXX
# >> Configure  PACKAGE REGISTRY RELEASE
#   Nothing to do here, everything is autoconfigured to work with the account/org that
#   is running the build.
# >> Configure  JAVADOC
#     JAVADOC_GHPAGES_REPO="riccardoblsandbox/javadoc.jmonkeyengine.org.git"
#   Generate a deploy key
#       ssh-keygen -t rsa -b 4096 -C "actions@users.noreply.github.com" -f javadoc_deploy
#   Set
#     JAVADOC_GHPAGES_DEPLOY_PRIVKEY="......."
#   In github repo -> Settings, use javadoc_deploy.pub as Deploy key with write access
######################################################################################
# Resources:
#   - Github actions docs: https://help.github.com/en/articles/about-github-actions
#   - Package registry docs: https://help.github.com/en/articles/about-github-package-registry
#   - Official actions: https://github.com/actions
#   - Community actions: https://github.com/sdras/awesome-actions
######################################################################################
# - Riccardo Balbo
######################################################################################

name: Build jMonkeyEngine
on:
  push:
    branches:
      - '*'
  pull_request:
  release:
    types: [published]

jobs:
  ScreenshotTests:
    name: Run Screenshot Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Install Mesa3D
      run: |
        sudo apt-get update
        sudo apt-get install -y mesa-utils libgl1-mesa-dri libgl1 libglx-mesa0 xvfb
    - name: Set environment variables for Mesa3D
      run: |
        echo "LIBGL_ALWAYS_SOFTWARE=1" >> $GITHUB_ENV
        echo "MESA_LOADER_DRIVER_OVERRIDE=llvmpipe" >> $GITHUB_ENV
    - name: Start xvfb
      run: |
        sudo Xvfb :99 -ac -screen 0 1024x768x16 &
        export DISPLAY=:99
        echo "DISPLAY=:99" >> $GITHUB_ENV
    - name: Verify Mesa3D Installation
      run: |
        glxinfo | grep "OpenGL"
    - name: Validate the Gradle wrapper
      uses: gradle/actions/wrapper-validation@v3
    - name: Test with Gradle Wrapper
      run: |
        ./gradlew :jme3-screenshot-test:screenshotTest
    - name: Upload Test Reports
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: screenshot-test-report
        retention-days: 30
        path: |
          **/build/reports/**
          **/build/changed-images/**
          **/build/test-results/**
